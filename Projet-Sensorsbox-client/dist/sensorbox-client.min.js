/*! sensorbox-client 26-05-2014 */
!function(){var a=function(){};a.prototype.on=function(a,b){this._events=this._events||{},this._events[a]=this._events[a]||[],this._events[a].push(b)},a.prototype.off=function(a,b){this._events=this._events||{},a in this._events!=!1&&this._events[a].splice(this._events[a].indexOf(b),1)},a.prototype.emit=function(a){if(this._events=this._events||{},a in this._events!=!1)for(var b=0;b<this._events[a].length;b++)this._events[a][b].apply(this,Array.prototype.slice.call(arguments,1))},a.inherits=function(b){for(var c=["on","off","emit"],d=0;d<c.length;d++)"function"==typeof b?b.prototype[c[d]]=a.prototype[c[d]]:b[c[d]]=a.prototype[c[d]]},window.EventEmitter=a}(),function(){var a=function(a){a=a||{},window.io.sails.url=this.host=a.host||"http://beta.sensorsbox.com:80",this.verbose=a.verbose||!1,EventEmitter.inherits(this),this.watchedBoxes=[],this.watchedSensors=[]},b=function(a){io.socket.on("measure",function(b){a.verbose&&console.log(b),a.watchedSensors.indexOf(b.data.sensor)>-1&&a.emit("measure",b)})},c=function(a){io.socket.on("box",function(c){a.verbose&&console.log(c),-1===a.watchedBoxes.indexOf(c.data.id)&&(a.verbose&&console.log("Watching all the sensors attached to the box..."),b(a),a.watchedBoxes.push(c.data.id),c.data.sensor.forEach(function(b){a.watchedSensors.push(b.id)}),a.emit("box",c))})},d=function(a){io.socket.on("sensor",function(c){a.verbose&&console.log(c),-1===a.watchedSensors.indexOf(c.data.id)&&(a.verbose&&console.log("Watching sensors..."),b(a),a.watchedSensors.push(c.data.id),a.emit("sensor",c))})};a.prototype.watchBox=function(a,b){var d="/api/v1/watch/box/";this.watchedBoxes.indexOf(a)>-1?b(new Error("You are already watching this box!")):(io.socket.get(this.host+d+a),c(this))},a.prototype.unwatchBox=function(a,b){var c="/api/v1/unwatch/box/";-1===this.watchedBoxes.indexOf(a)?b(new Error("You are not watching this box!")):io.socket.get(this.host+c+a,function(a){_self.verbose&&console.log("Unwatching all the sensors attached to the box..."),_self.watchedBoxes.splice(_self.watchedBoxes.indexOf(a.id),1),a.sensor.forEach(function(a){_self.watchedSensors.splice(_self.watchedSensors.indexOf(a.id),1)}),b(null,a)})},a.prototype.watchSensor=function(a,b){var c="/api/v1/watch/sensor/";this.watchedSensors.indexOf(a)>-1?b(new Error("You are already watching this sensor!")):(io.socket.get(this.host+c+a),d(this))},a.prototype.unwatchSensor=function(a,b){var c=this,d="/api/v1/unwatch/sensor/";-1===this.watchedSensors.indexOf(a)?b(new Error("You are not watching this sensor!")):io.socket.get(this.host+d+a,function(a){c.verbose&&console.log("Sensor unwatched..."),c.watchedSensors.splice(c.watchedSensors.indexOf(a.id),1),b(null,a)})},window.SensorsBox=a}();