"use strict";angular.module("sensorsboxclientApp",["ngRoute","ngResource","ui.bootstrap","angular-gestures","ngAnimate","nvd3ChartDirectives"]).config(["$routeProvider","$httpProvider",function($routeProvider,$httpProvider){$httpProvider.interceptors.push("UserStatusInterceptor"),$httpProvider.interceptors.push("ClientSpeedInterceptor");var isUserSignedinLocal=function($injector){return $injector.get("UserStatus").isUserSignedinLocal()},isUserSignedoutLocal=function($injector){return $injector.get("UserStatus").isUserSignedoutLocal()};$routeProvider.when("/",{templateUrl:"views/home.html",controller:"HomeCtrl"}).when("/guide",{templateUrl:"views/guide.html",controller:"GuideCtrl"}).when("/user/signin",{templateUrl:"views/user/signin.html",controller:"UserSigninCtrl",resolve:{condition:isUserSignedoutLocal}}).when("/user/signup",{templateUrl:"views/user/signup.html",controller:"UserSignupCtrl",resolve:{condition:isUserSignedoutLocal}}).when("/user/edit",{templateUrl:"views/user/edit.html",controller:"UserEditCtrl",resolve:{condition:isUserSignedinLocal}})}]).run(["$rootScope","utils","constants","state","initialisation","UserStatus",function($rootScope,utils,constants,state,initialisation,UserStatus){$rootScope.utils=utils,$rootScope.constants=constants,$rootScope.state=state,$rootScope.alerts=[],initialisation.initRedirectionListener(),initialisation.initIsMobileReloadOnWindowResize(),UserStatus.isUserSignedinLocal()}]),angular.module("sensorsboxclientApp").factory("utils",["$rootScope","$location","$window",function($rootScope,$location,$window){var toReturn={onApiError:function(errors){for(var error in errors){var alertData={type:"danger",msg:errors[error].message};$rootScope.alerts.push(alertData)}},locationPath:function(href){$location.path(href)},getLocationPath:function(){return $location.path()},externalHref:function(href,name){$rootScope.spinner="Redirecting you to "+name,$window.location.replace(href)}};return toReturn}]),angular.module("sensorsboxclientApp").filter("filterByParamId",function(){return function(input,param,id){for(var toReturn=[],i=0,len=input.length;len>i;i++)input[i][param]._id===id&&toReturn.push(input[i]);return toReturn}}),angular.module("sensorsboxclientApp").filter("getById",function(){return function(input,id){for(var i=0,len=input.length;len>i;i++)if(input[i]._id===id)return input[i];return null}}),angular.module("sensorsboxclientApp").service("ClientSpeedInterceptor",["$q","$rootScope",function($q,$rootScope){$rootScope.apicalls=$rootScope.apicalls||{GET:{},POST:{},PUT:{},DELETE:{}};var toReturn={request:function(config){return config.url.match(/api\//)&&($rootScope.apicalls[config.method][config.url]=(new Date).getTime()),config||$q.when(config)},response:function(response){return checkResponse(response),response||$q.when(response)},responseError:function(response){return checkResponse(response),$q.reject(response)}},vkbody=angular.element(document.querySelector("body")),checkResponse=function(response){if(response.config.url.match(/api\//)){var responseTime=(new Date).getTime()-$rootScope.apicalls[response.config.method][response.config.url];responseTime<$rootScope.constants.MIN_TIME_DISPLAY_SPINNER?vkbody.removeClass("vkslow").addClass("vkfast"):vkbody.removeClass("vkfast").addClass("vkslow")}};return toReturn}]),angular.module("sensorsboxclientApp").factory("state",function(){var toReturn={isMobile:null,isUserSignedinServer:null};return toReturn}),angular.module("sensorsboxclientApp").factory("initialisation",["$rootScope","$route",function($rootScope){var toReturn={initIsMobileReloadOnWindowResize:function(){var isMobile=function(){return window.innerWidth<$rootScope.constants.DESKTOP_MIN_WIDTH},reloadOnIsMobile=function(){var isLastMobile=isMobile();$rootScope.state.isMobile!==isLastMobile&&($rootScope.state.isMobile=isLastMobile,$rootScope.$digest())};$rootScope.state.isMobile=isMobile(),window.onresize=reloadOnIsMobile},initRedirectionListener:function(){$rootScope.$on("$routeChangeError",function(event,nextLocation,currentLocation,rejection){var errorMessage;errorMessage="notLoggedIn"===rejection.reason?'You need to sign in to access "'+nextLocation.$$route.originalPath+'"':"loggedIn"===rejection.reason?'You need to sign out to access "'+nextLocation.$$route.originalPath+'"':'You currently cannot access "'+nextLocation.$$route.originalPath+'"';var alertData={type:"danger",msg:errorMessage};$rootScope.alerts.push(alertData)})}};return toReturn}]),angular.module("sensorsboxclientApp").factory("User",["$resource","$rootScope",function($resource,$rootScope){var userUrl=$rootScope.constants.API_URL+"/user/:userId",userFactory=$resource(userUrl,{userId:"@id"},{update:{method:"PUT"}});return userFactory}]),angular.module("sensorsboxclientApp").factory("UserStatus",["$q","$rootScope","$http",function($q,$rootScope,$http){var isUserSignedinServer=function(){var defer=$q.defer();return $http.get($rootScope.constants.API_URL+"/user/me").success(function(user){$rootScope.user=user,$rootScope.state.isUserSignedinServer=!0,defer.resolve({reason:"loggedIn"})}).error(function(){delete $rootScope.user,$rootScope.state.isUserSignedinServer=!1,defer.reject({reason:"notLoggedIn"})}),defer.promise},isUserSignedoutServer=function(){var defer=$q.defer();return isUserSignedinServer().then(function(success){defer.reject(success)},function(rejection){defer.resolve(rejection)}),defer.promise},isUserSignedinLocal=function(){if(null===$rootScope.state.isUserSignedinServer)return isUserSignedinServer();var defer=$q.defer();return $rootScope.user&&"null"!==$rootScope.user?defer.resolve({reason:"loggedIn"}):defer.reject({reason:"notLoggedIn"}),defer.promise},isUserSignedoutLocal=function(){var defer=$q.defer();return isUserSignedinLocal().then(function(success){defer.reject(success)},function(){defer.resolve()}),defer.promise};return{isUserSignedinServer:isUserSignedinServer,isUserSignedoutServer:isUserSignedoutServer,isUserSignedinLocal:isUserSignedinLocal,isUserSignedoutLocal:isUserSignedoutLocal}}]),angular.module("sensorsboxclientApp").service("UserStatusInterceptor",["$q","$rootScope","$injector",function($q,$rootScope,$injector){return{responseError:function(rejection){return rejection.config.url!==$rootScope.constants.API_URL+"/login"&&rejection.config.url!==$rootScope.constants.API_URL+"/user"&&rejection.config.url!==$rootScope.constants.API_URL+"/user/me"&&rejection.config.url!==$rootScope.constants.API_URL+"/box"&&$injector.get("UserStatus").isUserSignedinServer().then(function(){var alertData={type:"danger",msg:"Your are not allowed to access this page"};$rootScope.alerts.push(alertData)},function(){var alertData={type:"danger",msg:"You need to sign in to access this page"};$rootScope.alerts.push(alertData)}),$q.reject(rejection)}}}]),angular.module("sensorsboxclientApp").factory("constants",function(){var toReturn={};return window.location.origin||(window.location.origin=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")),toReturn.ROOT_URL=window.location.origin,toReturn.API_URL=toReturn.ROOT_URL+"/api/v1",toReturn.snapOpts={transitionSpeed:.3},toReturn.MIN_TIME_DISPLAY_SPINNER=200,toReturn.DESKTOP_MIN_WIDTH=768,toReturn}),angular.module("sensorsboxclientApp").factory("architecture",function(){return{home:{name:"Home",url:"/#",children:{guide:{name:"Guide",url:"/#/guide"},usersignin:{name:"Sign in",url:"/#/user/signin"},usersignup:{name:"Sign up",url:"/#/user/signup"},useredit:{name:"User settings",url:"/#/user/edit"},box:{name:"Boxes",url:"/#/box",children:{create:{name:"Add box",url:"/#/box/create"},show:{name:"Box",url:"",children:{edit:{name:"Edit",url:""}}}}},sensor:{name:"Sensors",url:"/#/sensor",children:{create:{name:"Add sensor",url:"/#/sensor/create"},show:{name:"Sensor",url:"",children:{edit:{name:"Edit",url:""}}}}}}}}}),angular.module("sensorsboxclientApp").directive("layoutmobile",function(){return{templateUrl:"views/layout/mobile.html",restrict:"E",controller:["$scope",function(){}],link:function(){}}}),angular.module("sensorsboxclientApp").directive("layoutdesktop",function(){return{templateUrl:"views/layout/desktop.html",restrict:"E",controller:["$scope",function(){}],link:function(){}}}),angular.module("sensorsboxclientApp").directive("navigationmobile",["$rootScope","$http","$window","$location",function($rootScope,$http,$window,$location){return{templateUrl:"views/navigation/mobile.html",restrict:"E",link:function(scope){var snapSettings={element:document.getElementById("vkContainer"),dragger:null,disable:"none",addBodyClasses:!0,hyperextensible:!0,resistance:.5,flickThreshold:50,transitionSpeed:.3,easing:"ease",maxPosition:266,minPosition:-266,tapToClose:!0,touchToDrag:!0,slideIntent:40,minDragDistance:2},snapper=new Snap(snapSettings);$rootScope.$on("$routeChangeSuccess",function(){snapper.close(),scope.displaySubnav=!0}),scope.vkSnapToggle=function(side){snapper.state().state.match(/left|right/)?snapper.close():snapper.open(side)},scope.logout=function(){$http.get($rootScope.constants.API_URL+"/logout").success(function(){delete $rootScope.user,$location.path("/user/signin")}).error(function(data){alert(data.message)})}}}}]),angular.module("sensorsboxclientApp").directive("navigationdesktop",["$rootScope","$http","$location",function($rootScope,$http,$location){return{templateUrl:"views/navigation/desktop.html",restrict:"E",controller:["$scope",function(){}],link:function(scope){scope.logout=function(){$http.get($rootScope.constants.API_URL+"/logout").success(function(){delete $rootScope.user,$location.path("/user/signin")}).error(function(data){alert(data.message)})}}}}]),angular.module("sensorsboxclientApp").directive("headermobile",function(){return{templateUrl:"views/header/mobile.html",restrict:"E",controller:["$scope",function(){}],link:function(){}}}),angular.module("sensorsboxclientApp").directive("headerdesktop",function(){return{templateUrl:"views/header/desktop.html",restrict:"E",controller:["$scope",function(){}],link:function(){}}}),angular.module("sensorsboxclientApp").directive("spinner",function(){return{templateUrl:"views/spinner.html",restrict:"E",controller:["$scope",function($scope){var vkbody=angular.element(document.querySelector("body"));$scope.$watch("spinner",function(){$scope.spinner?vkbody.addClass("spinnerShown"):vkbody.removeClass("spinnerShown")})}],link:function(){}}}),angular.module("sensorsboxclientApp").directive("alerts",["$rootScope","$timeout",function($rootScope,$timeout){return{templateUrl:"views/alerts.html",restrict:"E",controller:["$scope",function(){}],link:function(scope){scope.alertLength=0;var updateAlerts=function(){var isAlertsNotEmpty=0===$rootScope.alerts.length?!1:!0,difference=$rootScope.alerts.length-scope.alertLength;isAlertsNotEmpty&&(window.scrollTo(0,0),document.querySelector(".snap-content > div")&&(document.querySelector(".snap-content > div").scrollTop=0),$timeout(function(){$rootScope.alerts.splice(0,difference)},3e3)),scope.alertLength=$rootScope.alerts.length},thisWatch=$rootScope.$watch("alerts",function(){updateAlerts()},!0);updateAlerts(),scope.$on("$destroy",function(){thisWatch()})}}}]),angular.module("sensorsboxclientApp").directive("breadcrumb",["$rootScope","architecture",function($rootScope,architecture){return{templateUrl:"views/breadcrumb.html",restrict:"E",controller:["$scope",function($scope){$rootScope.breadcrumb=[];var thisWatch=$rootScope.$watch("navigationpath",function(){generateBreadcrumb(architecture)});$scope.$on("$destroy",function(){thisWatch()});var generateBreadcrumb=function(navpath){var thisBreadcrumb=[];for(var i in $rootScope.navigationpath)"string"==typeof $rootScope.navigationpath[i]?(thisBreadcrumb.push({name:navpath[$rootScope.navigationpath[i]].name,url:navpath[$rootScope.navigationpath[i]].url}),navpath=navpath[$rootScope.navigationpath[i]].children):(thisBreadcrumb.push({name:$rootScope.navigationpath[i].name,url:$rootScope.navigationpath[i].url}),navpath=navpath[$rootScope.navigationpath[i].ref].children);$rootScope.breadcrumb=thisBreadcrumb}}],link:function(){}}}]),angular.module("sensorsboxclientApp").controller("HomeCtrl",["$rootScope","$scope",function($rootScope){$rootScope.navigationpath=["home"]}]),angular.module("sensorsboxclientApp").controller("GuideCtrl",["$rootScope","$scope",function($rootScope){$rootScope.navigationpath=["home","guide"]}]),angular.module("sensorsboxclientApp").controller("UserSigninCtrl",["$scope","$rootScope","$http","$location","utils",function($scope,$rootScope,$http,$location,utils){$rootScope.navigationpath=["home","usersignin"],$scope.signIn=function(user){$rootScope.spinner="Signin in",$http.post($rootScope.constants.API_URL+"/login",user).success(function(){var alertData={type:"success",msg:"Login successfull"};$rootScope.alerts=[alertData],$http.get($rootScope.constants.API_URL+"/user/me").success(function(user){$rootScope.user=user,$location.path("/"),delete $rootScope.spinner}).error(function(){delete $rootScope.user,delete $rootScope.spinner})}).error(function(data){if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Wrong credentials"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").controller("UserSignupCtrl",["$scope","$rootScope","$http","$location","utils",function($scope,$rootScope,$http,$location,utils){$rootScope.navigationpath=["home","usersignup"],$scope.signUp=function(user){$rootScope.spinner="Signin up",$http.post($rootScope.constants.API_URL+"/user",user).success(function(){delete $rootScope.spinner;var alertData={type:"success",msg:"User successfully created. You can now sign in"};$rootScope.alerts.push(alertData),$location.path("/user/signin")}).error(function(data){if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Signup failure"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").controller("UserEditCtrl",["User","$scope","$rootScope","$routeParams","utils",function(User,$scope,$rootScope,$routeParams,utils){$rootScope.navigationpath=["home","useredit"],$scope.signer=angular.copy($scope.user),$scope.updateUser=function(user){var thisUser=new User(user);$rootScope.spinner="Updating user",thisUser.$update({userId:user.id},function(){delete $rootScope.spinner,$rootScope.user=thisUser;var alertData={type:"success",msg:"Update successfull"};$rootScope.alerts.push(alertData)},function(response){var data=response.data;if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Cannot update"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").config(["$routeProvider",function($routeProvider){var isUserSignedinLocal=function($injector){return $injector.get("UserStatus").isUserSignedinLocal()};$routeProvider.when("/box",{templateUrl:"views/box/all.html",controller:"BoxListCtrl"}).when("/box/create",{templateUrl:"views/box/create.html",controller:"BoxCreateCtrl",resolve:{condition:isUserSignedinLocal}}).when("/box/:boxId/show",{templateUrl:"views/box/show.html",controller:"BoxShowCtrl"}).when("/box/:boxId/edit",{templateUrl:"views/box/edit.html",controller:"BoxEditCtrl",resolve:{condition:isUserSignedinLocal}})}]),angular.module("sensorsboxclientApp").factory("Box",["$resource","$rootScope",function($resource,$rootScope){var boxUrl=$rootScope.constants.API_URL+"/box/:boxId",boxFactory=$resource(boxUrl,{boxId:"@id"},{update:{method:"PUT"}});return boxFactory}]),angular.module("sensorsboxclientApp").controller("BoxListCtrl",["Box","$scope","$rootScope","$injector",function(Box,$scope,$rootScope){$rootScope.navigationpath=["home","box"];var queryBoxs=function(){$rootScope.spinner="Loading boxes",Box.query(function(data){$scope.boxs=data,delete $rootScope.spinner})};$scope.deleteBox=function(box){window.confirm("Delete box?")&&Box.delete({boxId:box.id},function(){queryBoxs()})},queryBoxs()}]),angular.module("sensorsboxclientApp").controller("BoxCreateCtrl",["Box","$scope","$rootScope","$location","utils",function(Box,$scope,$rootScope,$location,utils){$rootScope.navigationpath=["home","box","create"],$scope.addBox=function(box){$rootScope.spinner="Creating box";var thisBox=new Box(box);thisBox.$save(function(){delete $rootScope.spinner;var alertData={type:"success",msg:"Box successfully created"};$rootScope.alerts.push(alertData),$scope.box={}},function(response){var data=response.data;if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Cannot create"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").controller("BoxShowCtrl",["Box","$scope","$rootScope","$location","$routeParams",function(Box,$scope,$rootScope,$location,$routeParams){var boxId=$routeParams.boxId||"";$rootScope.navigationpath=["home","box"];var myBoxMeasures={};$scope.boxMeasures=[];var serverUrl=window.location.origin,sensorsBox=new SensorsBox({host:serverUrl});sensorsBox.on("measure",function(body){$scope.$apply(function(){myBoxMeasures[body.data.sensor].length>29&&myBoxMeasures[body.data.sensor].shift(),myBoxMeasures[body.data.sensor].push([new Date(body.data.createdAt),parseInt(body.data.value)])})}),sensorsBox.on("box",function(body){body.data.sensor.forEach(function(sensor){myBoxMeasures[sensor.id]=[],$scope.boxMeasures.push({key:sensor.name,values:myBoxMeasures[sensor.id]})})}),sensorsBox.watchBox($routeParams.boxId,function(){console.log("watching box")}),$scope.$on("$locationChangeStart",function(){sensorsBox.unwatchBox($routeParams.boxId,function(){console.log("Successfully unwatched box")})});var queryBox=function(boxId){$rootScope.spinner="Loading box",Box.get({boxId:boxId},function(box){delete $rootScope.spinner,$scope.box=box,$rootScope.navigationpath=["home","box",{ref:"show",name:box.name,url:""}]})};boxId&&queryBox(boxId),$scope.deleteBox=function(box){window.confirm("Delete box?")&&Box.delete({boxId:box._id},function(){$location.path("/box")})}}]),angular.module("sensorsboxclientApp").controller("BoxEditCtrl",["Box","$scope","$rootScope","$routeParams","utils",function(Box,$scope,$rootScope,$routeParams,utils){var boxId=$routeParams.boxId||"";$rootScope.navigationpath=["home","box"],boxId&&($rootScope.spinner="Loading box",Box.get({boxId:boxId},function(box){delete $rootScope.spinner,$scope.box=box,$rootScope.navigationpath=["home","box",{ref:"show",name:box.name,url:"/#/box/"+box.id+"/show"},"edit"]})),$scope.updateBox=function(box){$rootScope.spinner="Updating box";var boxCopy={};angular.extend(boxCopy,box),delete boxCopy.owner,delete boxCopy.updatedAt,delete boxCopy.createdAt,delete boxCopy.sensor;var thisBox=new Box(boxCopy);thisBox.$update({boxId:box.id},function(){delete $rootScope.spinner;var alertData={type:"success",msg:"Update successfull"};$rootScope.alerts.push(alertData)},function(response){var data=response.data;if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Cannot update"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").config(["$routeProvider",function($routeProvider){var isUserSignedinLocal=function($injector){return $injector.get("UserStatus").isUserSignedinLocal()};$routeProvider.when("/sensor",{templateUrl:"views/sensor/all.html",controller:"SensorListCtrl"}).when("/sensor/create",{templateUrl:"views/sensor/create.html",controller:"SensorCreateCtrl",resolve:{condition:isUserSignedinLocal}}).when("/sensor/:sensorId/show",{templateUrl:"views/sensor/show.html",controller:"SensorShowCtrl"}).when("/sensor/:sensorId/edit",{templateUrl:"views/sensor/edit.html",controller:"SensorEditCtrl",resolve:{condition:isUserSignedinLocal}})}]),angular.module("sensorsboxclientApp").factory("Sensor",["$resource","$rootScope",function($resource,$rootScope){var sensorUrl=$rootScope.constants.API_URL+"/sensor/:sensorId",sensorFactory=$resource(sensorUrl,{sensorId:"@id"},{update:{method:"PUT"}});return sensorFactory}]),angular.module("sensorsboxclientApp").controller("SensorListCtrl",["Sensor","$scope","$rootScope","$injector",function(Sensor,$scope,$rootScope){$rootScope.navigationpath=["home","sensor"];var querySensors=function(){$rootScope.spinner="Loading sensors",Sensor.query(function(data){$scope.sensors=data,delete $rootScope.spinner})};$scope.deleteSensor=function(sensor){window.confirm("Delete sensor?")&&Sensor.delete({sensorId:sensor.id},function(){querySensors()})},querySensors()}]),angular.module("sensorsboxclientApp").controller("SensorCreateCtrl",["Box","Sensor","$scope","$rootScope","$location","utils",function(Box,Sensor,$scope,$rootScope,$location,utils){$rootScope.navigationpath=["home","sensor","create"],Box.query(function(data){delete $rootScope.spinner,$scope.boxs=data}),$scope.addSensor=function(sensor){$rootScope.spinner="Creating sensor";var thisSensor=new Sensor(sensor);thisSensor.$save(function(){delete $rootScope.spinner;var alertData={type:"success",msg:"Sensor successfully created"};$rootScope.alerts.push(alertData),$scope.sensor={}},function(response){var data=response.data;if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Cannot create"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").controller("SensorShowCtrl",["Sensor","$scope","$rootScope","$location","$routeParams",function(Sensor,$scope,$rootScope,$location,$routeParams){var sensorId=$routeParams.sensorId||"";$rootScope.navigationpath=["home","sensor"],io.socket.get("/api/v1/watch/sensor/"+$routeParams.sensorId,function(body,sailsResponseObject){200===sailsResponseObject.statusCode&&console.log("subscribed to updates to sensor and to measures by this sensor")});var querySensor=function(sensorId){$rootScope.spinner="Loading sensor",Sensor.get({sensorId:sensorId},function(sensor){delete $rootScope.spinner,$scope.sensor=sensor,$rootScope.navigationpath=["home","sensor",{ref:"show",name:sensor.name,url:""}]})};sensorId&&querySensor(sensorId),$scope.deleteSensor=function(sensor){window.confirm("Delete sensor?")&&Sensor.delete({sensorId:sensor._id},function(){$location.path("/sensor")})}}]),angular.module("sensorsboxclientApp").controller("SensorEditCtrl",["Box","Sensor","$scope","$rootScope","$routeParams","utils",function(Box,Sensor,$scope,$rootScope,$routeParams,utils){var sensorId=$routeParams.sensorId||"";$rootScope.navigationpath=["home","sensor"],Box.query(function(data){delete $rootScope.spinner,$scope.boxs=data}),sensorId&&($rootScope.spinner="Loading sensor",Sensor.get({sensorId:sensorId},function(sensor){delete $rootScope.spinner,sensor.box=sensor.box.id,$scope.sensor=sensor,$rootScope.navigationpath=["home","sensor",{ref:"show",name:sensor.name,url:"/#/sensor/"+sensor.id+"/show"},"edit"]})),$scope.updateSensor=function(sensor){$rootScope.spinner="Updating sensor";var sensorCopy={};angular.extend(sensorCopy,sensor),delete sensorCopy.owner,delete sensorCopy.updatedAt,delete sensorCopy.createdAt,delete sensorCopy.box;var thisSensor=new Sensor(sensorCopy);thisSensor.$update({sensorId:sensor.id},function(){delete $rootScope.spinner;var alertData={type:"success",msg:"Update successfull"};$rootScope.alerts.push(alertData)},function(response){var data=response.data;if(delete $rootScope.spinner,data.errors)utils.onApiError(data.errors);else{var alertData={type:"danger",msg:"Cannot update"};$rootScope.alerts.push(alertData)}})}}]),angular.module("sensorsboxclientApp").directive("nvd3LineChart",function(){return{restrict:"E",priority:1e17,link:function(scope,element){console.log(element)}}}),angular.module("sensorsboxclientApp").run(["$templateCache",function($templateCache){$templateCache.put("views/alerts.html",'<div class="vkalertcontainer"><div><alert ng-repeat="alert in alerts | orderBy:$index:reverse" type="{{alert.type}}" class="vkalert">{{alert.msg}}</alert></div></div>'),$templateCache.put("views/box/all.html",'<div class="row"><div class="col-xs-12 col-lg-6"><div class="articleOptions" ng-show="user"><div hm-tap="utils.locationPath(\'box/create\')" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add box</div></div><h1><i class="fa fa-cube"></i> All boxes</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Boxes</h3></div><div class="panel-body"><ul class="list-group"><li ng-repeat="box in boxs | orderBy:\'name\'" class="list-group-item clearfix"><div class="articleOptions"><div ng-show="(user.id === box.owner.id)" hm-tap="utils.locationPath(\'box/{{box.id}}/edit\')" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span></div><div ng-show="(user.id === box.owner.id)" hm-tap="deleteBox(box)" class="btn btn-default" style="margin-left:5px"><span class="glyphicon glyphicon-remove"></span></div><br><br><div hm-tap="utils.locationPath(\'box/{{box.id}}/show\')" class="btn btn-block btn-primary" style="padding-left:2em;padding-right:2em">Details</div></div><p><strong>{{box.name}}</strong></p><p>{{box.description}}</p></li></ul></div></div></div></div>'),$templateCache.put("views/box/create.html",'<div class="row"><div class="col-xs-12 col-lg-6"><h1><i class="fa fa-cube"></i> Add box</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><form><div class="form-group"><label>Name</label><div><input class="form-control" type="text" ng-model="box.name" placeholder="Name"></div></div><div class="form-group"><label>Description</label><div><textarea class="form-control" ng-model="box.description" placeholder="Description"></textarea></div></div><div class="form-group"><button type="submit" class="btn btn-primary btn-lg btn-block" ng-click="addBox(box)">Add box</button></div></form></div></div></div></div>'),$templateCache.put("views/box/edit.html",'<div class="row"><div class="col-xs-12 col-lg-6"><h1><i class="fa fa-cube"></i> {{box.name}}</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><form><div class="form-group"><label>Name</label><div><input class="form-control" type="text" ng-model="box.name" placeholder="Name"></div></div><div class="form-group"><label>Description</label><div><textarea class="form-control" ng-model="box.description" placeholder="Description"></textarea></div></div><div class="form-group"><button type="submit" class="btn btn-primary btn-lg btn-block" ng-click="updateBox(box)">Update box</button></div></form></div></div></div></div>'),$templateCache.put("views/box/show.html",'<div class="row"><div class="col-xs-12 col-lg-6"><div ng-show="user && (user.id === box.owner.id)" class="articleOptions clearfix"><div style="padding-bottom:8px"><div hm-tap="utils.locationPath(\'box/\' + box.id + \'/edit\')" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span></div><div hm-tap="deleteRpi(box)" class="btn btn-default" style="margin-left:5px"><span class="glyphicon glyphicon-remove"></span></div></div></div><h1><i class="fa fa-cube"></i> {{box.name}}</h1></div></div><div class="row"><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><p><strong>Id:</strong>{{box.id}}</p><p><strong>Owner:</strong>{{box.owner.firstname}}</p><p><strong>Description:</strong>{{box.description}}</p></div></div><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Sensors</h3></div><div class="panel-body"><div class="articleOptions" ng-show="user"><div hm-tap="utils.locationPath(\'sensor/create\')" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add sensor</div></div><h5>All sensors for this box</h5><ul class="list-group"><li ng-repeat="sensor in box.sensor | orderBy:\'name\'" class="list-group-item clearfix"><div class="articleOptions"><div ng-show="user && (user.id === box.owner.id)" hm-tap="utils.locationPath(\'sensor/{{sensor.id}}/edit\')" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span></div><div ng-show="user && (user.id === box.owner.id)" hm-tap="deleteSensor(sensor)" class="btn btn-default" style="margin-left:5px"><span class="glyphicon glyphicon-remove"></span></div><br><br><div hm-tap="utils.locationPath(\'sensor/{{sensor.id}}/show\')" class="btn btn-block btn-primary" style="padding-left:2em;padding-right:2em">Details</div></div><p><strong>{{sensor.name}}</strong></p><p>{{sensor.description}}</p></li></ul></div></div></div><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Integration</h3></div><div class="panel-body"><pre>\n&lt;script&gt;\n  var sensorsBox = new SensorsBox();\n  sensorsBox.watchBox(\'{{box.id}}\');\n  sensorsBox.on(\'measure\', function(body){\n    console.log(body.data);\n  });\n&lt;/script&gt;\n</pre></div></div><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Graph</h3></div><div class="panel-body"><nvd3-line-chart data="boxMeasures" width="600" objectequality="true" height="350" showxaxis="true" showyaxis="true" xaxistickformat="xAxisTickFormat_Date_Format()" yaxistickformat="yAxisFormatFunction()"><svg></svg></nvd3-line-chart></div></div></div></div>'),$templateCache.put("views/breadcrumb.html",'<ol class="breadcrumb"><li ng-repeat="path in breadcrumb"><a ng-show="!$last" ng-href="{{path.url}}" ng-bind="path.name"></a> <span ng-show="$last" ng-bind="path.name"></span></li></ol>'),$templateCache.put("views/guide.html",'<div class="row"><div class="col-xs-12 col-lg-6"><h1><i class="fa fa-book"></i> Guide</h1></div></div><div class="row"><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">With sensorsbox-client</h3></div><div class="panel-body"><p>The recommended way of using SensorsBox is with the javascript library <a href="https://github.com/stereolux/sensorsbox-client" target="_blank">sensorsbox-client</a>.<br></p><h4>Installation</h4><p>Insert the library in your html, and create an instance of the "SensorsBox" Constructor.<pre>\n&lt;script src="sensorsbox-client.js"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var sensorsBox = new SensorsBox();\n&lt;/script&gt;\n</pre>This initiates a websocket connection to the server.</p><h4>Watch a whole box</h4><p>If you wish to listen to all the sensors of a specific box, you must:<ul><li>Get the box ID on the site</li><li>call the method "watchBox"</li><li>listen to "measure" events</li></ul><pre>\n&lt;script src="sensorsbox-client.js"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var sensorsBox = new SensorsBox();\n  sensorsBox.watchBox(YOUR_BOX_ID);\n  sensorsBox.on(\'measure\', function(body){\n    console.log(body.data);\n  });\n&lt;/script&gt;\n</pre></p><h4>Watch a sensor</h4><p>If you wish to listen to a specific sensor, you must:<ul><li>Get the sensor ID on the site</li><li>call the method "watchSensor"</li><li>listen to "measure" events</li></ul><pre>\n&lt;script src="sensorsbox-client.js"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var sensorsBox = new SensorsBox();\n  sensorsBox.watchSensor(YOUR_SENSOR_ID);\n  sensorsBox.on(\'measure\', function(body){\n    console.log(body.data);\n  });\n&lt;/script&gt;\n</pre></p></div></div></div><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">With the raw API</h3></div><div class="panel-body"><p>The SensorsBox API is built on the <a href="https://github.com/LearnBoost/socket.io" target="_blank">Socket.IO</a> library.<br>To initiate a websocket connection, you must therefore follow the socket.io protocol:<ul><li>Initiate a GET request to \'http://sensorsbox.com/socket.io\'</li><li>Get the first parameter of the response: this is your Socket.IO session ID</li><li>Initiate a Websocket connection to \'ws://sensorsbox.com/socket.io/1/websocket/YOUR_SESSION_ID\'</li></ul>More information about the protocol can be found on the <a href="https://github.com/LearnBoost/socket.io-spec" target="_blank">Socket.IO specification page</a>.<br></p></div></div></div></div>'),$templateCache.put("views/header/desktop.html",'<nav class="navbar navbar-default" role="navigation" style="padding:10px 10px 0px 20px"><div class="navbar-collapse navbar-ex1-collapse" style="padding:0 15px 0 0"><a href="/"><img src="images/b1b94a02.logo.png" style="height:40px"></a><ul class="nav navbar-nav navbar-right"><li ng-show="!user"><a hm-tap="utils.locationPath(\'user/signin\')">Sign in</a></li><li ng-show="!user"><a hm-tap="utils.locationPath(\'user/signup\')">Sign up</a></li><li class="dropdown vkNavLogDetails" ng-show="user"><a class="dropdown-toggle">{{user.firstname}} <b class="caret"></b></a><ul class="dropdown-menu"><li><a hm-tap="utils.locationPath(\'user/edit\')">Settings</a></li><li><a hm-tap="logout()">Sign out</a></li></ul></li></ul></div></nav>'),$templateCache.put("views/header/mobile.html",'<div class="clearfix"><img src="images/b1b94a02.logo.png" style="height:30px"><div hm-tap="vkSnapToggle(\'left\')" class="glyphicon glyphicon-th-large vkhomeicon"></div><div hm-tap="vkSnapToggle(\'right\')" class="glyphicon glyphicon-user vkusericon"></div></div>'),$templateCache.put("views/home.html",'<div class="row"><div class="col-xs-12 col-md-8 col-lg-6"><h2>Real time data from sensors</h2><p>SensorsBox exposes an API to Raspberry Pi\'s sensors.<br>Building your application is as simple as selecting a box and pasting a few lines of code</p><a class="btn btn-primary btn-lg btn-block" hm-tap="utils.locationPath(\'guide\')">Installation guide</a></div></div><div class="row"><div class="col-xs-12 col-md-8 col-lg-6"><h2>Browse boxes</h2><p>Find the box you need to build your application</p><a class="btn btn-primary btn-lg btn-block" hm-tap="utils.locationPath(\'box\')">Browse boxes</a><div ng-show="!user"><h2>Want your own box?</h2><p>Create an account on our platform</p><div class="btn-group btn-group-justified"><a class="btn btn-primary btn-lg" hm-tap="utils.locationPath(\'user/signin\')">Sign in</a> <a class="btn btn-default btn-lg" hm-tap="utils.locationPath(\'user/signup\')">Sign up</a></div></div></div></div>'),$templateCache.put("views/layout/desktop.html",'<div class="container-fluid"><headerdesktop></headerdesktop><div class="row"><div class="col-xs-3 col-lg-2" style="position: fixed;background:#f8f8f8;height:100%;padding-top:60px;border-right:1px solid #e7e7e7"><navigationdesktop></navigationdesktop></div><div class="col-xs-9 col-xs-push-3 col-lg-10 col-lg-push-2" style="padding-top:60px"><div style="padding-top: 10px"><breadcrumb></breadcrumb><alerts></alerts><div ng-view="" class="vkView clearfix"></div><spinner></spinner></div></div></div></div>'),$templateCache.put("views/layout/mobile.html",'<navigationmobile></navigationmobile><div id="vkContainer" class="snap-content"><div><div class="container"><breadcrumb></breadcrumb><alerts></alerts><div ng-view="" class="vkView clearfix"></div></div><div class="disableUi"></div></div><headermobile></headermobile><spinner></spinner></div>'),$templateCache.put("views/navigation/desktop.html",'<div style="padding-top: 10px"><div class="list-group"><a class="list-group-item" ng-click="utils.locationPath(\'\')"><i class="fa fa-home"></i>&nbsp;&nbsp;Home</a> <a class="list-group-item" ng-click="utils.locationPath(\'guide\')"><i class="fa fa-book"></i>&nbsp;&nbsp;Guide</a> <a class="list-group-item" ng-click="utils.locationPath(\'box\')"><i class="fa fa-cube"></i>&nbsp;&nbsp;Boxes</a> <a class="list-group-item" ng-click="utils.locationPath(\'sensor\')"><i class="fa fa-tag"></i>&nbsp;&nbsp;Sensors</a></div></div>'),$templateCache.put("views/navigation/mobile.html",'<div class="snap-drawers"><div class="snap-drawer snap-drawer-left"><nav class="scrollable" role="navigation"><div class="vkbrand">Menu</div><a hm-tap="utils.locationPath(\'\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/\'}">Home</a><h5 ng-show="user" class="centeredH dark"><span>Settings</span></h5><div ng-show="user" style="clear:both"><a hm-tap="utils.locationPath(\'guide\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/guide\'}">Guide</a> <a hm-tap="utils.locationPath(\'box\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/box\'}">Boxes</a> <a hm-tap="utils.locationPath(\'sensor\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/sensor\'}">Sensors</a></div></nav></div><div class="snap-drawer snap-drawer-right"><nav class="scrollable" role="navigation"><div ng-show="!user"><div class="vkbrand">User</div><a hm-tap="utils.locationPath(\'user/signin\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/user/signin\'}">Sign in</a> <a hm-tap="utils.locationPath(\'user/signup\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/user/signup\'}">Sign up</a></div><div ng-show="user"><div class="vkbrand">{{user.firstname}}</div><a hm-tap="utils.locationPath(\'user/edit\')" class="list-group-item" ng-class="{active:utils.getLocationPath() == \'/user/edit\'}">Settings</a> <a hm-tap="logout()" class="list-group-item">Sign out</a></div></nav></div></div>'),$templateCache.put("views/sensor/all.html",'<div class="row"><div class="col-xs-12 col-lg-6"><div class="articleOptions" ng-show="user"><div hm-tap="utils.locationPath(\'sensor/create\')" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add sensor</div></div><h1><i class="fa fa-tag"></i> All sensors</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Sensors</h3></div><div class="panel-body"><ul class="list-group"><li ng-repeat="sensor in sensors | orderBy:\'name\'" class="list-group-item clearfix"><div class="articleOptions"><div ng-show="(user.id === sensor.box.owner)" hm-tap="utils.locationPath(\'sensor/{{sensor.id}}/edit\')" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span></div><div ng-show="(user.id === sensor.box.owner)" hm-tap="deleteSensor(sensor)" class="btn btn-default" style="margin-left:5px"><span class="glyphicon glyphicon-remove"></span></div><br><br><div hm-tap="utils.locationPath(\'sensor/{{sensor.id}}/show\')" class="btn btn-block btn-primary" style="padding-left:2em;padding-right:2em"><span>Details</span></div></div><p><strong>{{sensor.name}}</strong></p><p>{{sensor.description}}</p></li></ul></div></div></div></div>'),$templateCache.put("views/sensor/create.html",'<div class="row"><div class="col-xs-12 col-lg-6"><h1><i class="fa fa-tag"></i> Add sensor</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><form><div class="form-group"><label>Box</label><div><select class="form-control" ng-model="sensor.box" placeholder="Name"><option ng-repeat="box in boxs" value="{{box.id}}">{{box.name}}</select></div></div><div class="form-group"><label>Name</label><div><input class="form-control" type="text" ng-model="sensor.name" placeholder="Name"></div></div><div class="form-group"><label>Description</label><div><textarea class="form-control" ng-model="sensor.description" placeholder="Description"></textarea></div></div><div class="form-group"><label>Pin</label><div><input class="form-control" type="number" ng-model="sensor.pin" placeholder="Pin"></div></div><div class="form-group"><label>Record Frequency</label><div><input class="form-control" type="number" ng-model="sensor.recordFrequency" placeholder="Record Frequency"></div></div><div class="form-group"><label>Measure Frequency</label><div><input class="form-control" type="number" ng-model="sensor.measureFrequency" placeholder="Measure Frequency"></div></div><div class="form-group"><button type="submit" class="btn btn-primary btn-lg btn-block" ng-click="addSensor(sensor)">Add sensor</button></div></form></div></div></div></div>'),$templateCache.put("views/sensor/edit.html",'<div class="row"><div class="col-xs-12 col-lg-6"><h1><i class="fa fa-tag"></i> {{sensor.name}}</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><form><div class="form-group"><label>Box</label><div><select class="form-control" ng-model="sensor.box" placeholder="Name"><option ng-repeat="box in boxs" value="{{box.id}}">{{box.name}}</select></div></div><div class="form-group"><label>Name</label><div><input class="form-control" type="text" ng-model="sensor.name" placeholder="Name"></div></div><div class="form-group"><label>Description</label><div><textarea class="form-control" ng-model="sensor.description" placeholder="Description"></textarea></div></div><div class="form-group"><label>Pin</label><div><input class="form-control" type="text" ng-model="sensor.pin" placeholder="Pin"></div></div><div class="form-group"><label>Record Frequency</label><div><input class="form-control" type="text" ng-model="sensor.recordFrequency" placeholder="Record Frequency"></div></div><div class="form-group"><label>Measure Frequency</label><div><input class="form-control" type="text" ng-model="sensor.measureFrequency" placeholder="Measure Frequency"></div></div><div class="form-group"><button type="submit" class="btn btn-primary btn-lg btn-block" ng-click="updateSensor(sensor)">Update sensor</button></div></form></div></div></div></div>'),$templateCache.put("views/sensor/show.html",'<div class="row"><div class="col-xs-12 col-lg-6"><div ng-show="user && (user.id === sensor.box.owner)" class="articleOptions clearfix"><div style="padding-bottom:8px"><div hm-tap="utils.locationPath(\'sensor/\' + sensor.id + \'/edit\')" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span></div><div hm-tap="deleteRpi(sensor)" class="btn btn-default"><span class="glyphicon glyphicon-remove"></span></div></div></div><h1><i class="fa fa-tag"></i> {{sensor.name}}</h1><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Settings</h3></div><div class="panel-body"><p><strong>Id:</strong>{{sensor.id}}</p><p><strong>Description:</strong>{{sensor.description}}</p><p><strong>Pin:</strong>{{sensor.pin}}</p><p><strong>Box:</strong>{{sensor.box.name}}</p></div></div><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Integration</h3></div><div class="panel-body"><pre>\n&lt;script src="sensorsbox-client.js"&gt;&lt;/script&gt;\n&lt;script&gt;\n  var sensorsBox = new SensorsBox();\n  sensorsBox.watchSensor(\'{{sensor.id}}\');\n  sensorsBox.on(\'measure\', function(body){\n    console.log(body.data);\n  });\n&lt;/script&gt;\n</pre></div></div></div></div>'),$templateCache.put("views/spinner.html",'<div class="spinnerContainer"><div><div class="spinner"><div class="ui-spinner"><span class="side side-left"><span class="fill"></span></span> <span class="side side-right"><span class="fill"></span></span></div></div><div class="spinnerContent">{{spinner}}</div></div></div>'),$templateCache.put("views/user/edit.html",'<h2>User settings</h2><form><div class="form-group"><label for="name">First Name</label><div><input class="form-control" type="text" ng-model="signer.firstname" placeholder="First Name"></div></div><div class="form-group"><label for="name">Last Name</label><div><input class="form-control" type="text" ng-model="signer.lastname" placeholder="Last Name"></div></div><div class="form-group"><label for="email">Email</label><div><input class="form-control" type="text" ng-model="signer.email" placeholder="Email"></div></div><div class="form-group"><button class="btn btn-primary btn-lg btn-block" type="submit" ng-click="updateUser(signer)">Update user</button></div></form>'),$templateCache.put("views/user/signin.html",'<h2>Sign in</h2><div class="row"><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading">Sign in</div><div class="panel-body"><form><div class="form-group"><label for="email">Email</label><div><input class="form-control" type="email" name="email" ng-model="signer.email" placeholder="Email"></div></div><div class="form-group"><label for="password">Password</label><div><input class="form-control" type="password" ng-model="signer.password" placeholder="Password"></div></div><div class="form-group"><button class="btn btn-primary btn-lg btn-block" type="submit" ng-click="signIn(signer)">Sign in</button></div></form></div></div></div></div>'),$templateCache.put("views/user/signup.html",'<h2>Sign up</h2><div class="row"><div class="col-xs-12 col-lg-6"><div class="panel panel-default"><div class="panel-heading">Sign up</div><div class="panel-body"><form><div class="form-group"><label for="name">First Name</label><div><input class="form-control" type="text" ng-model="signer.firstname" placeholder="First Name"></div></div><div class="form-group"><label for="name">Last Name</label><div><input class="form-control" type="text" ng-model="signer.lastname" placeholder="Last Name"></div></div><div class="form-group"><label for="email">Email</label><div><input class="form-control" type="text" ng-model="signer.email" placeholder="Email"></div></div><div class="form-group"><label for="password">Password</label><div><input class="form-control" type="password" ng-model="signer.password" placeholder="Password"></div></div><div class="form-group"><button class="btn btn-primary btn-lg btn-block" type="submit" ng-click="signUp(signer)">Sign up</button></div></form></div></div></div></div>')
}]);